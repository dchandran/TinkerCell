#import <Python.h>
#include "API/Python/TC_py.h"

#cmakedefine CMAKE_WIN32

#ifndef CMAKE_WIN32
#include "dlfcn.h"
#endif

PyObject* main_dict;
PyObject* dlfl_dict;
FILE * pyout;

void initialize()
{
#ifndef CMAKE_WIN32
	dlopen("@PYTHON_LIBRARIES@", RTLD_LAZY | RTLD_GLOBAL);	
	Py_SetProgramName("Tinkercell");
#endif
	Py_Initialize();
	
	Py_InitModule("pytc", pytcMethods);
	PyObject *mainmod = PyImport_AddModule("__main__");
	PyObject *dlfl = PyImport_AddModule("pytc");
	main_dict = PyModule_GetDict( mainmod );
	dlfl_dict = PyModule_GetDict( dlfl );
	
	pyout = fopen("py.out","a");
}

void exec(const char * code,const char * outfile)
{
	PyObject * s,
			 *evalVal,
			 *errobj, 
			 *errdata, 
			 *errtraceback,
	char *retString, 
		 *errString;

	PyRun_SimpleString( code );
	
	evalVal = PyDict_GetItemString( main_dict, "_" );
	
	PyErr_Fetch (&errobj, &errdata, &errtraceback);
	
	if (evalVal != NULL)
	{
		s = PyObject_Str(evalVal); 
		retString = PyString_AsString(s);
		tc_print(retString);
		Py_DECREF(s); 
	}
	
	tc_printFile(outfile);
	
	if (errdata != NULL) 
	{ 
		s = PyObject_Str(errdata); 
		errString = PyString_AsString(s);
		tc_errorReport(errString);
		Py_DECREF(s); 
	}
	
	Py_XDECREF(errobj); 
	Py_XDECREF(errdata); 
	Py_XDECREF(errtraceback); 
	Py_XDECREF(evalVal);
}

void finalize()
{
    Py_Finalize();
	
	fclose(pyout);
}
