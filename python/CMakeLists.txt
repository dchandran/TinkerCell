SET(LIBRARY_OUTPUT_PATH ${EXECUTABLE_OUTPUT_PATH}/python)

IF (NOT DEFINED PYTHON_INCLUDE_PATH OR NOT DEFINED PYTHON_LIBRARY)
	FIND_PACKAGE( PythonLibs )
ENDIF (NOT DEFINED PYTHON_INCLUDE_PATH OR NOT DEFINED PYTHON_LIBRARY)

IF (DEFINED PYTHON_LIB)
	SET(PYTHON_LIBRARY ${PYTHON_LIB})
ENDIF (DEFINED PYTHON_LIB)

IF (DEFINED PYTHON_INCLUDE_PATH AND NOT DEFINED PYTHON_INCLUDE_DIR)
   SET(PYTHON_INCLUDE_DIR ${PYTHON_INCLUDE_PATH})
ENDIF (DEFINED PYTHON_INCLUDE_PATH AND NOT DEFINED PYTHON_INCLUDE_DIR)

IF (DEFINED PYTHON_INCLUDE_DIRS)
   SET(PYTHON_INCLUDE_DIR ${PYTHON_INCLUDE_DIRS})
ENDIF (DEFINED PYTHON_INCLUDE_DIRS)


IF (NOT IS_DIRECTORY ${PYTHON_INCLUDE_DIR} OR NOT DEFINED PYTHON_LIBRARY)
	IF (NOT IS_DIRECTORY ${PYTHON_INCLUDE_DIR})
		 MESSAGE(WARNING ": path PYTHON_INCLUDE_PATH not found. Use Add Entry to add it")
	ENDIF (NOT IS_DIRECTORY ${PYTHON_INCLUDE_DIR})
	IF (NOT DEFINED PYTHON_LIBRARY)
		 MESSAGE(WARNING ": filepath PYTHON_LIB not found. Use Add Entry to add it")
	ENDIF (NOT DEFINED PYTHON_LIBRARY)
ELSE (NOT IS_DIRECTORY ${PYTHON_INCLUDE_DIR} OR NOT DEFINED PYTHON_LIBRARY)

MESSAGE(STATUS "Using Python library: ${PYTHON_LIBRARY}")

IF ( WIN32 )
  ADD_DEFINITIONS(-D_WIN32)
  ADD_DEFINITIONS(-DNODLOPEN)
  IF (MINGW)
	 ADD_DEFINITIONS(-D__MINGW32__)
  ENDIF(MINGW)
ENDIF( WIN32 )

IF ( APPLE )
  SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -framework Python")
  ADD_DEFINITIONS(-DNODLOPEN)
ENDIF ( APPLE )

INCLUDE_DIRECTORIES( BEFORE ${PYTHON_INCLUDE_DIR} )

CONFIGURE_FILE( runpy.c.in 
${TINKERCELL_BINARY_DIR}/python/runpy.c
@ONLY
)
ADD_DEFINITIONS(-DLIB_EXPORTS=0)

ADD_LIBRARY( tcpy
  SHARED
  ${TINKERCELL_BINARY_DIR}/python/runpy.c
#      runpy.c
  tinkercell_wrap.c
)

TARGET_LINK_LIBRARIES( tcpy
tcpy
tinkercellapi
${PYTHON_LIBRARY}
)

IF ( WIN32 )
 IF (MINGW)
	ADD_CUSTOM_COMMAND ( 
		TARGET tcpy POST_BUILD
		COMMAND move /Y ..\\bin\\python\\libtcpy.dll ..\\bin\\python\\_tinkercell.pyd
	)
 ELSE (MINGW)
	ADD_CUSTOM_COMMAND (
		TARGET tcpy POST_BUILD
		COMMAND move /Y \"${TINKERCELL_BINARY_DIR}\"\\bin\\python\\Release\\tcpy.dll \"${TINKERCELL_BINARY_DIR}\"\\bin\\python\\Release\\_tinkercell.pyd
	)
 ENDIF (MINGW)
 FILE(GLOB PYTHON_LOADER ${TINKERCELL_BINARY_DIR}/bin/python/_tinkercell.pyd)
ELSE ( WIN32 )
 IF( APPLE )
	ADD_CUSTOM_COMMAND ( 
		  TARGET tcpy POST_BUILD
		  COMMAND cp ${TINKERCELL_BINARY_DIR}/bin/python/libtcpy.dylib ${TINKERCELL_BINARY_DIR}/bin/python/_tinkercell.so
		  COMMAND mv ${TINKERCELL_BINARY_DIR}/bin/python/libtcpy.dylib ${TINKERCELL_BINARY_DIR}/bin/python/_tinkercell.dylib
	)
	FILE(GLOB PYTHON_LOADER ${TINKERCELL_BINARY_DIR}/bin/python/_tinkercell.*)
ELSE( APPLE )
	ADD_CUSTOM_COMMAND ( 
		  TARGET tcpy POST_BUILD 
		  COMMAND mv ${TINKERCELL_BINARY_DIR}/bin/python/libtcpy.so ${TINKERCELL_BINARY_DIR}/bin/python/_tinkercell.so
	)
	FILE(GLOB PYTHON_LOADER ${TINKERCELL_BINARY_DIR}/bin/python/_tinkercell.so)
ENDIF( APPLE )
ENDIF( WIN32 )

FILE(GLOB PYTHON_SCRIPTS *.py)

INSTALL(FILES ${PYTHON_SCRIPTS} DESTINATION python )
INSTALL(FILES ${PYTHON_LOADER} DESTINATION python )

ENDIF (NOT IS_DIRECTORY ${PYTHON_INCLUDE_DIR} OR NOT DEFINED PYTHON_LIBRARY)
